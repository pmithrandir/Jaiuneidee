<?php

namespace JaiUneIdee\SiteBundle\DataFixtures\ORM;

use Doctrine\Common\DataFixtures\AbstractFixture;
use Doctrine\Common\DataFixtures\OrderedFixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;
use JaiUneIdee\LocalisationBundle\Entity\Localisation;

class LocalisationFixtures extends AbstractFixture implements OrderedFixtureInterface
{
    function load(ObjectManager $manager)
    {
    	$localisations = array(
			"France"=> array(
				"Alsace"=>array(),
				"Aquitaine"=>array(),
				"Auvergne"=>array(),
				"Bourgogne"=>array(),
				"Bretagne"=>array(
					"Finistere"=>array(
					//	"Brest"=>array(),
					),
					"Morbihan"=>array(),
					"Cotes d'armor"=>array(),
					"Ile et Vilaine"=>array(),
				),
				"Centre"=>array(),
				"Champagne-Ardenne"=>array(),
				"Corse"=>array(),
				"Franche-Comté"=>array(),
				"Guadeloupe"=>array(),
				"Guyane"=>array(),
				"Île-de-France"=>array(),
				"Languedoc-Roussillon"=>array(),
				"Limousin"=>array(),
				"Lorraine"=>array(),
				"Martinique"=>array(),
				"Mayotte"=>array(),
				"Midi-Pyrénées"=>array(),
				"Nord-Pas-de-Calais"=>array(),
				"Basse-Normandie"=>array(),
				"Haute-Normandie"=>array(),
				"Pays de la Loire"=>array(),
				"Picardie"=>array(),
				"Poitou-Charentes"=>array(),
				"Provence-Alpes-Côte d'Azur"=>array(),
				"La Réunion"=>array(),
				"Rhône-Alpes"=>array(),
			)
		);
		$temp = $this->createLocalisations($manager, $localisations);
        $manager->flush();
//        $this->addReference('localisation', $france);
//		foreach($regions as $key=>$region){
//        	$this->addReference("localisation-".$key, ${$region});
//		}
    }
    public function getOrder()
    {
        return 2;
    }
    private function createLocalisations(ObjectManager $manager, $localisations, &$min = 0, &$max = 0, $parent = null){
    	$toReturn = array();
    	foreach ($localisations as $localisation =>$enfants){
			$object = new Localisation();
	        $object->setNom($localisation);
	        $object->setMin($min);
	        $min++;
			$max++;
	        if(!is_null($parent)){
	        	$object->setParent($parent);
	        }
	        //$manager->persist($object);
	        $toReturn[$localisation] = array();
			$toReturn[$localisation]['enfants'] =$this->createLocalisations($manager, $enfants, $min, $max, $object);
			$object->setMax($max);
	        $toReturn[$localisation]['contenu'] = $object;
	        $manager->persist($object);
			
		}
		return $toReturn;
    }

}