<?php

namespace JaiUneIdee\SiteBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * VoteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VoteRepository extends EntityRepository
{
	public function getVotesByIdee($idee){
        $qb = $this->createQueryBuilder('v')
                    ->select('v.note','COUNT(v.id) as nombre')
                    ->where('v.idee = :idee_id')
                    ->andwhere('v.is_removed = false')
                    ->addGroupBy('v.note')
                    ->addOrderBy('v.note')
                    ->setParameter('idee_id', $idee->getId())
                ;
        $result = $qb->getQuery()->getResult();
        $aRetourner = array();
        foreach($result as $value){
        	$aRetourner[$value['note']] = $value['nombre'];
        }
        return $aRetourner;
    }
    public function getVotesByIdeeAndUser($idee, $user){
        $qb = $this->createQueryBuilder('v')
                    ->where('v.idee = :idee_id')
                    ->andWhere('v.user = :user_id')
                    ->andwhere('v.is_removed = false')
                    ->setParameter('idee_id', $idee->getId())
                    ->setParameter('user_id', $user->getId());
        return $qb->getQuery()->getOneOrNullResult();
    }
    public function count24(){
        $qb = $this->createQueryBuilder('v');
        $qb->select('count(v.id)');
        $qb->andWhere('v.created_at >= :hier');
        $qb->setParameter('hier', new \DateTime('-1 day'));
        return $qb->getQuery()->getSingleScalarResult();
    }
    public function count(){
        $qb = $this->createQueryBuilder('v');
        $qb->select('count(v.id)');
        return $qb->getQuery()->getSingleScalarResult();
    }
}